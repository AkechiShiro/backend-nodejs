diff --git a/configure.py b/configure.py
index e6f7e4db00..0e4c0dcebd 100755
--- a/configure.py
+++ b/configure.py
@@ -48,7 +48,7 @@ from fetch_deps import FetchDeps
 parser = optparse.OptionParser()
 
 valid_os = ('win', 'mac', 'solaris', 'freebsd', 'openbsd', 'linux',
-            'android', 'aix', 'cloudabi')
+            'android', 'aix', 'cloudabi', 'ios')
 valid_arch = ('arm', 'arm64', 'ia32', 'mips', 'mipsel', 'mips64el', 'ppc',
               'ppc64', 'x32','x64', 'x86', 'x86_64', 's390x')
 valid_arm_float_abi = ('soft', 'softfp', 'hard')
@@ -1886,7 +1886,7 @@ write('config.mk', do_not_edit + config_str)
 gyp_args = ['--no-parallel', '-Dconfiguring_node=1']
 
 if options.use_ninja:
-  gyp_args += ['-f', 'ninja']
+  gyp_args += ['-f', 'ninja-' + flavor]
 elif flavor == 'win' and sys.platform != 'msys':
   gyp_args += ['-f', 'msvs', '-G', 'msvs_version=auto']
 else:
diff --git a/deps/cares/cares.gyp b/deps/cares/cares.gyp
index 02b2774c02..fd0514ed20 100644
--- a/deps/cares/cares.gyp
+++ b/deps/cares/cares.gyp
@@ -157,6 +157,10 @@
           'include_dirs': [ 'config/darwin' ],
           'sources': [ 'config/darwin/ares_config.h' ]
         }],
+        [ 'OS=="ios"', {
+          'include_dirs': [ 'config/darwin' ],
+          'sources': [ 'config/darwin/ares_config.h' ]
+        }],
         [ 'OS=="freebsd" or OS=="dragonflybsd"', {
           'include_dirs': [ 'config/freebsd' ],
           'sources': [ 'config/freebsd/ares_config.h' ]
diff --git a/deps/uv/src/unix/darwin.c b/deps/uv/src/unix/darwin.c
index d0ecd452d8..8ef12362f8 100644
--- a/deps/uv/src/unix/darwin.c
+++ b/deps/uv/src/unix/darwin.c
@@ -33,9 +33,9 @@
 #include <sys/sysctl.h>
 #include <unistd.h>  /* sysconf */
 
-#if !TARGET_OS_IPHONE
+//#if !TARGET_OS_IPHONE
 #include "darwin-stub.h"
-#endif
+//#endif
 
 static uv_once_t once = UV_ONCE_INIT;
 static uint64_t (*time_func)(void);
diff --git a/node.gyp b/node.gyp
index f18a0d58a8..00efe57096 100644
--- a/node.gyp
+++ b/node.gyp
@@ -417,7 +417,7 @@
             },
           },
           'conditions': [
-            ['OS != "aix" and OS != "mac"', {
+            ['OS != "aix" and OS != "mac" and OS != "ios"', {
               'ldflags': [
                 '-Wl,--whole-archive',
                 '<(obj_dir)/<(STATIC_LIB_PREFIX)<(node_core_target_name)<(STATIC_LIB_SUFFIX)',
@@ -537,6 +537,20 @@
         }],
       ],
     }, # node_core_target_name
+    {
+     
+      'target_name': 'libnode_stub',
+      'type': '<(node_intermediate_lib_type)',
+      'include_dirs': [
+        'src',
+        'deps/v8/include',
+        'deps/uv/include'
+      ],
+      'sources': [
+        'src/node_snapshot_stub.cc',
+        'src/node_code_cache_stub.cc',
+      ]
+    },
     {
       'target_name': '<(node_lib_target_name)',
       'type': '<(node_intermediate_lib_type)',
diff --git a/node.gypi b/node.gypi
index 43dbda7bbf..8c81cd39ca 100644
--- a/node.gypi
+++ b/node.gypi
@@ -132,7 +132,7 @@
             },
           },
           'conditions': [
-            ['OS!="aix" and node_shared=="false"', {
+            ['OS!="aix" and OS!="ios" and node_shared=="false"', {
               'ldflags': [
                 '-Wl,--whole-archive',
                 '<(obj_dir)/deps/zlib/<(STATIC_LIB_PREFIX)zlib<(STATIC_LIB_SUFFIX)',
@@ -171,7 +171,7 @@
             },
           },
           'conditions': [
-            ['OS!="aix" and node_shared=="false"', {
+            ['OS!="aix" and OS!="ios" and node_shared=="false"', {
               'ldflags': [
                 '-Wl,--whole-archive',
                 '<(obj_dir)/deps/uv/<(STATIC_LIB_PREFIX)uv<(STATIC_LIB_SUFFIX)',
@@ -327,7 +327,7 @@
             './deps/openssl/openssl.gyp:openssl',
 
             # For tests
-            './deps/openssl/openssl.gyp:openssl-cli',
+            #'./deps/openssl/openssl.gyp:openssl-cli',
           ],
           'conditions': [
             # -force_load or --whole-archive are not applicable for
diff --git a/tools/gyp/pylib/gyp/common.py b/tools/gyp/pylib/gyp/common.py
index a915643867..407a17f836 100644
--- a/tools/gyp/pylib/gyp/common.py
+++ b/tools/gyp/pylib/gyp/common.py
@@ -468,7 +468,7 @@ def CopyTool(flavor, out_path, generator_flags={}):
   to |out_path|."""
     # aix and solaris just need flock emulation. mac and win use more complicated
     # support scripts.
-    prefix = {"aix": "flock", "solaris": "flock", "mac": "mac", "win": "win"}.get(
+    prefix = {"aix": "flock", "solaris": "flock", "mac": "mac", "win": "win", "ios": "mac"}.get(
         flavor, None
     )
     if not prefix:
diff --git a/tools/gyp/pylib/gyp/generator/ninja.py b/tools/gyp/pylib/gyp/generator/ninja.py
index e064bad7ed..4d2c76d6c5 100644
--- a/tools/gyp/pylib/gyp/generator/ninja.py
+++ b/tools/gyp/pylib/gyp/generator/ninja.py
@@ -1589,7 +1589,7 @@ class NinjaWriter(object):
         elif spec["type"] == "static_library":
             self.target.binary = self.ComputeOutput(spec)
             if (
-                self.flavor not in ("mac", "openbsd", "netbsd", "win")
+                self.flavor not in ("mac", "openbsd", "netbsd", "win", "ios")
                 and not self.is_standalone_static_library
             ):
                 self.ninja.build(
@@ -2502,7 +2502,7 @@ def GenerateOutputForConfig(target_list, target_dicts, data, params, config_name
             ),
         )
 
-    if flavor != "mac" and flavor != "win":
+    if flavor != "mac" and flavor != "win" and flavor != "ios":
         master_ninja.rule(
             "alink",
             description="AR $out",
@@ -2849,7 +2849,7 @@ def GenerateOutputForConfig(target_list, target_dicts, data, params, config_name
             if name != target.FinalOutput() and spec["toolset"] == "target":
                 target_short_names.setdefault(name, []).append(target)
             target_outputs[qualified_target] = target
-            if qualified_target in all_targets:
+            if qualified_target in all_targets and 'executable' != target.type:
                 all_outputs.add(target.FinalOutput())
             non_empty_target_names.add(name)
         else:
